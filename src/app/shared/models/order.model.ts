// src/app/shared/models/order.model.ts

import { Address } from './address.model'; // Import the new Address model
import { CartItem } from './cart.model';

/**
 * Interface for a single item within the cart.
 * Assuming 'product' has 'id', 'name', 'basePrice', 'selectedUnit', 'selectedQuantity'.
 * 'selectedUnit' needs 'label' and 'priceFactor'.
 */
// export interface CartItem {
//   product: {
//     id: string;
//     name: string;
//     basePrice: number;
//     // Assuming a structure for unit selection, e.g., 'kg', 'piece'
//     selectedUnit: {
//       label: string; // e.g., 'kg', 'piece'
//       priceFactor: number; // e.g., 1 for 'piece', 50 for 'kg' if basePrice is per kg
//     };
//     selectedQuantity: number; // The quantity of this specific unit selected
//     imageUrl?: string; // Optional: for displaying product image
//   };
// }

/**
 * Interface for representing an entire order placed by a user.
 */
export interface Order {
  id?: string; // Order ID will likely be generated by the backend
  userId?: string; // User ID, if authenticated
  items: CartItem[]; // List of items in the order
  totalAmount: number; // Total price of the order
  shippingAddress: Address; // The address for shipping
  // UPDATED: Added 'upi' as a payment method
  paymentMethod: 'cod' | 'credit_card' | 'net_banking' | 'upi' | string; // Type of payment
  status: 'pending' | 'confirmed' | 'shipped' | 'delivered' | 'cancelled' | string; // Current status of the order
  orderDate?: Date; // Date when the order was placed
  // Add any other relevant fields like notes, delivery instructions etc.
}
